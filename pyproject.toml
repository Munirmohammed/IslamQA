[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "islamqa-backend"
version = "1.0.0"
description = "Advanced Islamic Q&A Chatbot Backend with ML-powered search"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Munir Mohammed", email = "munirmohammed038@gmail.com"}
]
maintainers = [
    {name = "Munir Mohammed", email = "munirmohammed038@gmail.com"}
]
keywords = ["islamic", "qa", "chatbot", "nlp", "fastapi", "ml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Religion",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "scrapy>=2.11.0",
    "selenium>=4.15.2",
    "pandas>=2.1.4",
    "numpy>=1.25.2",
    "transformers>=4.36.2",
    "sentence-transformers>=2.2.2",
    "nltk>=3.8.1",
    "spacy>=3.7.2",
    "scikit-learn>=1.3.2",
    "torch>=2.1.2",
    "faiss-cpu>=1.7.4",
    "pyarabic>=0.6.15",
    "arabic-reshaper>=3.0.0",
    "python-bidi>=0.4.2",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "websockets>=12.0",
    "aioredis>=2.0.1",
    "celery>=5.3.4",
    "prometheus-client>=0.19.0",
    "structlog>=23.2.0",
    "python-slugify>=8.0.1",
    "dateparser>=1.2.0",
    "schedule>=1.2.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.5"
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
    "mkdocstrings[python]>=0.24.0"
]
monitoring = [
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3"
]

[project.urls]
Homepage = "https://github.com/Munirmohammed/IslamQA"
Documentation = "https://github.com/Munirmohammed/IslamQA#readme"
Repository = "https://github.com/Munirmohammed/IslamQA"
Issues = "https://github.com/Munirmohammed/IslamQA/issues"
Changelog = "https://github.com/Munirmohammed/IslamQA/releases"

[project.scripts]
islamqa = "app.main:main"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]
known_third_party = ["fastapi", "pydantic", "sqlalchemy"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scrapy.*",
    "selenium.*",
    "nltk.*",
    "spacy.*",
    "torch.*",
    "faiss.*",
    "transformers.*",
    "sentence_transformers.*",
    "pyarabic.*",
    "arabic_reshaper.*",
    "bidi.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "scraping: Web scraping tests",
    "ml: Machine learning tests",
    "api: API tests",
    "websocket: WebSocket tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/virtualenvs/*",
    "*/.tox/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "migrations",
    "build",
    "dist"
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]
